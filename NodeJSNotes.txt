NodeJSNotes:


/*********************
*Folder Hierarchy:
*
*folder node-examples: how to export node module files in 2 ways. and reference the module file from another js file.
*
*folder node-http: used node http module, created a http server
*
*folder node-express: used node express framework, and other modules such as body-parser, morgan. also created seperated Router modules.
*
*folder node-express-gen: used Expresss Generator to scaffold an express app, used the Routers created in node-express.
*
*folder rest-server: integrated REST API server based on Express framework, with Mongoose schema and models, with mongodb. note i added the db.json just for reference of the data.
*
*folder basic-auth: basic authorization, used module of Express and Morgan. No Mongodb. Only served 2 dummy html files
*
*********************/




/*********************
*Some terms:
*
*Node.js: is a js runtime built on Chrome's V8 js engine. Node.js' package ecosystem npm is the largest ecosystem of open source lib in the world.
*
*Node Module:
*- files and modules are in one-to-one correspondence. each file is treated as a separate module
*
*Express: a web framework for NodeJS. "A top layer that extends Connect".
* 
*Connect: a http server framework built on Node. "a middleware framework for node".
*
*morgan: HTTP request logger middleware for node.js. Once you start the server in CMD, in the shell it will display the http request logs.
*
*body-parser: NodeJS body parsing middleware. Parse incoming req.body in different formats, such as text, json, xml. 
*********************/




/*********************
*Server Commands:
*
*in node-express-gen:
*- npm start: will run the server, by call .bin/www
*
*in node-express:
*- node server: will run the server.js file and start the server.
*********************/



/*********************
*Mongodb Commands:
*
*===install and run server===
*- new folder ./mongodb/data, mongodb folder in parallel with node-http, node-express.
*- move to the mogodb folder, run command below to start the mongodb server
*- mongod --dbpath=data
*- open another CMD shell (note git bash doesn't work well), run command below to start mongo REPL shell to interact with the db 
*- mongo
*
*
*===add system variable===
*this is to make sure you are able to run the mongodb commands anywhere
*- window serarch: system
*- advanced system settings
*- Environment Variables
*- in 2nd window, double click on Path 
*- new path similar like "C:\Program Files\MongoDB\Server\3.4\bin"
*
*
*===mongodb node driver===
*- npm install mongodb --save
*- npm install assert --save
*
*
*
*===mongodb sample querys===
*- show dbs
*- use conFusion
*	//conFusion is a db
*- use conFusion
*- show collections
*	//collection is Table, document is table row
*- db.dishes.find().pretty()
*	//dishes is a document, show the contents
*
*********************/




/*********************
*rest-server-passport Summary and Commands:
*
*compoents:
*- rest API server
*- data host is mongodb
*- use authentication: token-based verification, Node Passport Module
*
*DB commands
*- cd mongodb, start mongodb server
*- mongod --dbpath=data
*- cd rest-server-passport, start the rest API server
*- npm start
*
*registration
*- open postman
*- POST localhost:3000/users/register
*- no Authorization
*- Body:
{
	"username": "Chang Liu",
	"password": "password"
}
*
*Login
*- POST localhost:3000/users/login
*- no Authorization
*- Body:
{
	"username": "Chang Liu",
	"password": "password"
}
*- return the token. copy the token
*
*Any subsequent access to server, will need the token in the request header 
*
*- GET localhost:3000/dishes
*- no Authorization
*- Header, new Key "x-access-token"
*- Value: paste the token string
*- returns [] 
*
*- POST localhost:3000/dishes
*- Header contains the token
*- Body contains a dish in json format
*
*
*
*
*Admin User
*
*Register:
*- Body:
{
	"username": "Admin",
	"password": "password"
}
*
*Admin Flag Set in mongodb
*- open CMD
*- mongo
*- use conFusion
*- db.users.find().pretty()
*- db.users.update({username:"admin"}, {$set:{admin:true}})
*
*
*- login as Admin and as Chang Liu, see different accessibility for GET, PUT, POST, DELETE. And Get users
*********************/